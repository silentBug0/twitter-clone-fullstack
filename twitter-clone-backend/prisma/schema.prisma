// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tweets    Tweet[]
  likes     Like[]
  following Following[] @relation("Follower")
  followers Following[] @relation("Followee")
}

model Tweet {
  id        Int      @id @default(autoincrement())
  content   String
  authorId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author User   @relation(fields: [authorId], references: [id])
  likes  Like[]
}

// Add this new model
model Like {
  id        Int      @id @default(autoincrement())
  userId    Int
  tweetId   Int
  user      User     @relation(fields: [userId], references: [id])
  tweet     Tweet    @relation(fields: [tweetId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, tweetId]) // A user can only like a tweet once
}

model Following {
  id        Int      @id @default(autoincrement())
  followerId Int
  followeeId Int
  follower   User     @relation("Follower", fields: [followerId], references: [id])
  followee   User     @relation("Followee", fields: [followeeId], references: [id])
  createdAt  DateTime @default(now())

  @@unique([followerId, followeeId]) // A user can only follow another user once
}
